# Epic Resume Development Environment Requirements
# Optimized for Ubuntu Container Development
# Generated by CodeCraft Nexus AI Assistant
# Version: 2.0.0 - Updated for Resilient Installation

# ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
# 🚀 WHAT'S NEW IN VERSION 2.0.0
# ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

# ✅ FIXES FOR COMMON ISSUES:
# - Removed deprecated @vite/create-app (was causing 404 errors)
# - Fixed npm proxy configuration warnings
# - Individual package installation prevents total failure
# - Added comprehensive troubleshooting script

# 🔧 IMPROVED INSTALLATION PROCESS:
# - Resilient error handling - continues even if some packages fail
# - Better debugging with package-by-package installation
# - Automatic npm cache cleanup and configuration optimization
# - Health checks and verification built-in

# 📦 OPTIMIZED PACKAGE SELECTION:
# - Removed conflicting packages (live-server)
# - Made heavy packages optional (@storybook/cli)
# - Focused on essential development tools only

# 🛠️ NEW TROUBLESHOOTING CAPABILITIES:
# - Automated environment diagnosis (troubleshoot.sh)
# - System requirement validation
# - Port conflict detection and resolution
# - Performance optimization recommendations

# ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
# SYSTEM REQUIREMENTS
# ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

# Operating System: Ubuntu 20.04 LTS or higher
# Memory: Minimum 2GB RAM (4GB recommended)
# Storage: Minimum 5GB free space
# Network: Internet connection for package downloads

# ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
# CORE RUNTIME DEPENDENCIES
# ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

# Node.js LTS (v20.x)
nodejs>=20.0.0

# npm (comes with Node.js)
npm>=10.0.0

# Yarn (alternative package manager)
yarn>=1.22.0

# ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
# PROJECT DEPENDENCIES (from package.json)
# ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

# Build Tool and Development Server
vite>=4.5.0

# Progressive Web App Plugin
vite-plugin-pwa>=0.20.5

# ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
# TESTING FRAMEWORK DEPENDENCIES
# ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

# JavaScript Testing Framework
jest>=29.6.4

# DOM Testing Environment for Jest
jest-environment-jsdom>=29.6.4

# Babel Core for Jest Transpilation
@babel/core>=7.22.10

# Babel Preset for Modern JavaScript
@babel/preset-env>=7.22.10

# Babel Jest Integration
babel-jest>=29.6.4

# ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
# GLOBAL DEVELOPMENT TOOLS (Updated for Resilient Installation)
# ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

# ESSENTIAL PACKAGES (Installed individually with error handling)
# ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

# Build Tool and Development Server
vite>=4.5.0                    # Core build tool (replaces deprecated @vite/create-app)

# Static File Servers
serve>=14.0.0                  # Primary static server
http-server>=14.0.0            # Alternative static server
# live-server>=1.2.0           # REMOVED: Not essential, can cause conflicts

# Development Process Management
nodemon>=3.0.0                 # File watcher for development
pm2>=5.0.0                     # Process manager for production

# Code Quality and Linting
eslint>=8.0.0                  # JavaScript/TypeScript linter
prettier>=3.0.0                # Code formatter

# TypeScript Support
typescript>=5.0.0              # TypeScript compiler
# @types/node>=20.0.0          # MOVED to project dependencies (not global)

# Development Utilities
concurrently>=8.0.0            # Run multiple commands concurrently
rimraf>=5.0.0                  # Cross-platform rm -rf
cross-env>=7.0.0               # Cross-platform environment variables

# Performance and Audit Tools
lighthouse>=11.0.0             # Web performance auditing

# OPTIONAL PACKAGES (Install manually if needed)
# ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

# Component Development (install only if using Storybook)
# @storybook/cli>=7.0.0        # REMOVED from default install (large dependency)

# Additional Static Servers (alternatives)
# live-server>=1.2.0           # Live reload server (use if preferred over Vite)

# Advanced TypeScript Tooling
# @types/node>=20.0.0          # Node.js type definitions (project-specific)

# ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
# UBUNTU SYSTEM PACKAGES
# ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

# Essential Development Tools
build-essential
git
curl
wget
unzip

# Code Editors and Development Environment
code-server  # VS Code Server for container development

# Web Browsers for Testing
google-chrome-stable
chromium-browser
firefox

# System Utilities
htop      # System monitor
tree      # Directory tree viewer
jq        # JSON processor
vim       # Text editor
nano      # Text editor

# X11 and Display (for headless browser testing)
xvfb      # Virtual framebuffer X server

# SSL and Security
ca-certificates
gnupg
apt-transport-https

# ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
# BROWSER TESTING DEPENDENCIES
# ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

# Chrome WebDriver for Selenium
chromedriver  # Automatically matched to Chrome version

# ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
# RECOMMENDED VS CODE EXTENSIONS
# ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

# JavaScript/TypeScript
ms-vscode.vscode-typescript-next

# CSS and Styling
bradlc.vscode-tailwindcss
ms-vscode.vscode-css-peek
pranaygp.vscode-css-peek

# Code Quality
esbenp.prettier-vscode
dbaeumer.vscode-eslint

# HTML Development
formulahendry.auto-rename-tag
zignd.html-css-class-completion

# Development Utilities
christian-kohler.path-intellisense
ms-vscode.vscode-json
ritwickdey.liveserver

# ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
# OPTIONAL ENHANCEMENT TOOLS
# ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

# Docker (if running in containerized environment)
docker.io        # Optional: for advanced containerization
docker-compose   # Optional: for multi-container setups

# Database Tools (for future expansion)
sqlite3          # Lightweight database for development

# Image Optimization (for resume assets)
imagemagick      # Image manipulation toolkit
optipng          # PNG optimizer
jpegoptim        # JPEG optimizer

# Network Tools
netcat-openbsd   # Network testing
curl             # HTTP client
wget             # File downloader

# ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
# ENVIRONMENT VARIABLES
# ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

# NODE_ENV=development
# WORKSPACE=/workspace/epic-resume
# VITE_APP_TITLE=Epic Resume
# VITE_APP_DESCRIPTION=Interactive Resume for Elias Vaughn

# ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
# PORT CONFIGURATIONS
# ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

# Vite Development Server: 5173
# Vite Preview Server: 4173
# VS Code Server: 8080
# Live Server: 5500 (if used)
# Storybook: 6006 (if used)

# ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
# INSTALLATION STRATEGY (UPDATED 2024)
# ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

# RESILIENT INSTALLATION APPROACH:
# - Individual package installation with error handling
# - Continued installation even if some packages fail
# - Better debugging and verification capabilities
# - Deprecated package removal (@vite/create-app)

# INSTALLATION COMMANDS (Updated Method)
# ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

# Primary installation method (recommended):
# chmod +x install.sh && ./install.sh

# Manual installation method (individual packages):
# npm cache clean --force
# npm config set registry https://registry.npmjs.org/
# npm install -g vite@latest
# npm install -g serve@latest
# npm install -g eslint@latest
# npm install -g prettier@latest
# npm install -g typescript@latest
# npm install -g lighthouse@latest

# Troubleshooting method (if issues occur):
# chmod +x troubleshoot.sh && ./troubleshoot.sh

# Project-specific dependencies (run in project directory):
# npm install vite vite-plugin-pwa
# npm install --save-dev @babel/core @babel/preset-env babel-jest jest jest-environment-jsdom

# VERIFICATION COMMANDS
# ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

# Check installed global packages:
# npm list -g --depth=0

# Verify specific tools:
# vite --version
# serve --version
# eslint --version
# prettier --version
# typescript --version
# lighthouse --version

# REMOVED PACKAGES AND REASONS
# ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

# @vite/create-app          - DEPRECATED: No longer exists in npm registry
# live-server               - CONFLICTS: Can interfere with Vite dev server
# @storybook/cli           - OPTIONAL: Large dependency, install only if needed
# @types/node              - PROJECT-SPECIFIC: Better as dev dependency than global

# ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
# DEVELOPMENT WORKFLOW
# ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

# 1. Install dependencies: npm install
# 2. Start development: npm run dev
# 3. Run tests: npm run test
# 4. Build production: npm run build
# 5. Preview production: npm run preview

# ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
# PERFORMANCE CONSIDERATIONS
# ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

# CPU: 2+ cores recommended for fast builds
# RAM: 4GB+ for smooth development experience
# Storage: SSD recommended for faster npm installs
# Network: Broadband for downloading dependencies

# ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
# SECURITY CONSIDERATIONS
# ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

# - VS Code Server password: epicresume2024 (change in production)
# - Default ports are exposed for development only
# - Use HTTPS in production deployment
# - Regularly update dependencies for security patches

# ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
# TROUBLESHOOTING AND DEBUGGING (UPDATED 2024)
# ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

# AUTOMATED TROUBLESHOOTING:
# ./troubleshoot.sh - Comprehensive environment diagnosis and repair

# COMMON ISSUES AND SOLUTIONS (Updated):

# Issue: "404 Not Found - @vite/create-app"
# Solution: Package deprecated - use updated install.sh script

# Issue: "npm warn Unknown env config 'http-proxy'"
# Solution: Run troubleshoot.sh to clear proxy configuration

# Issue: Global package installation hanging
# Solution: Individual package installation with error handling (implemented)

# Issue: "Module not found" errors
# Solution: Run 'npm install' in project directory

# Issue: Port already in use (5173, 4173, 8080)
# Solution: Kill processes using 'pkill -f vite' or 'fuser -k PORT/tcp'

# Issue: Permission denied errors
# Solution: Ensure scripts have execute permissions (chmod +x *.sh)

# Issue: Chrome/ChromeDriver version mismatch
# Solution: troubleshoot.sh automatically updates both to matching versions

# Issue: VS Code Server not accessible
# Solution: Check if port 8080 is open and service is running

# Issue: Build failures
# Solution: Clear node_modules and reinstall (npm run clean)

# Issue: Performance issues in container
# Solution: Increase file watchers (handled automatically in install.sh)

# DIAGNOSTIC COMMANDS
# ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

# System diagnostics:
# free -h                    # Check memory usage
# df -h                      # Check disk space
# lsb_release -a            # Check Ubuntu version
# node --version             # Check Node.js version
# npm --version              # Check npm version

# Network diagnostics:
# netstat -tuln | grep :5173  # Check if Vite port is in use
# curl http://localhost:5173   # Test development server
# curl http://localhost:8080   # Test VS Code Server

# Package diagnostics:
# npm list -g --depth=0       # List global packages
# npm doctor                  # Check npm configuration
# npm config list             # Show npm settings

# Process diagnostics:
# ps aux | grep vite          # Check Vite processes
# ps aux | grep code-server   # Check VS Code Server processes

# ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
# MAINTENANCE SCHEDULE
# ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

# Weekly: Update npm packages (npm update)
# Monthly: Update Node.js to latest LTS
# Quarterly: Review and update global tools
# As needed: Update browser versions for testing

# ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
# VERSION HISTORY AND CHANGELOG
# ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

# Version: 2.0.0 (Updated July 2024)
# Major Changes:
# - REMOVED: @vite/create-app (deprecated package causing 404 errors)
# - IMPROVED: Individual package installation with error handling
# - ADDED: Comprehensive troubleshooting script (troubleshoot.sh)
# - ADDED: Automatic npm configuration cleanup
# - ADDED: Package verification and health checks
# - REMOVED: live-server from default install (potential conflicts)
# - MOVED: @storybook/cli to optional packages (large dependency)
# - OPTIMIZED: Installation resilience and debugging capabilities

# Version: 1.0.0 (Initial Release)
# - Basic development environment setup
# - Batch package installation approach
# - Essential development tools configuration

# ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
# LICENSE AND ATTRIBUTION
# ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

# Generated by: CodeCraft Nexus AI Assistant
# For: Elias Vaughn Epic Interactive Resume
# License: MIT (as specified in project LICENSE file)
# Version: 2.0.0
# Last Updated: July 2024
# Tested on: Ubuntu 20.04 LTS, Ubuntu 22.04 LTS

# ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
# COMPATIBILITY MATRIX
# ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

# Operating Systems:
# ✅ Ubuntu 20.04 LTS
# ✅ Ubuntu 22.04 LTS
# ✅ Ubuntu 24.04 LTS
# ⚠️ Ubuntu 18.04 LTS (minimal support)

# Node.js Versions:
# ✅ Node.js 18.x LTS
# ✅ Node.js 20.x LTS (recommended)
# ✅ Node.js 22.x (latest)
# ⚠️ Node.js 16.x (deprecated)

# Container Platforms:
# ✅ Docker
# ✅ Podman
# ✅ LXC/LXD
# ✅ WSL2 (Ubuntu)

# Cloud Platforms:
# ✅ AWS EC2
# ✅ Google Cloud Platform
# ✅ Azure Virtual Machines
# ✅ DigitalOcean Droplets
# ✅ Linode
# ✅ GitHub Codespaces

# ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
# END OF REQUIREMENTS
# ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
